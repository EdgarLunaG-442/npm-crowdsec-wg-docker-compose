services:
  app:
    image: traefik/whoami
    restart: always
    networks:
      crowdsec:
    
  reverse-proxy:
    image: nginx:alpine
    restart: always
    ports:
      - 8000-8005:80
    depends_on:
      - 'app'
    volumes:
      - ./reverse-proxy/nginx.conf:/etc/nginx/nginx.conf
    networks:
      crowdsec:
    labels:
      - crowdsec.enable=true
      - crowdsec.labels.type=nginx
    ## https://docs.crowdsec.net/docs/next/data_sources/docker#use_container_labels
  
  crowdsec:
    image: crowdsecurity/crowdsec:v1.6.2 ## container labels were introduced in 1.6.2
    restart: always
    networks:
      crowdsec:
    environment:
      DOCKER_HOST: tcp://socket-proxy:2375
      COLLECTIONS: "crowdsecurity/nginx"
    depends_on:
      - 'reverse-proxy'
      - 'socket-proxy'
    volumes:
      - ./crowdsec/acquis.yaml:/etc/crowdsec/acquis.yaml
      - crowdsec-db:/var/lib/crowdsec/data/
      - crowdsec-config:/etc/crowdsec/

  socket-proxy:
    networks:
      crowdsec:
    restart: always
    image: lscr.io/linuxserver/socket-proxy:latest
    container_name: socket-proxy
    environment:
      INFO: 1
      CONTAINERS: 1
      POST: 0
      BUILD: 0
      COMMIT: 0
      CONFIGS: 0
      DISTRIBUTION: 0
      EXEC: 0
      GRPC: 0
      IMAGES: 0
      NETWORKS: 0
      NODES: 0
      PLUGINS: 0
      SERVICES: 0
      SESSION: 0
      SWARM: 0
      SYSTEM: 0
      TASKS: 0
      VOLUMES: 0
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    read_only: true
    tmpfs:
      - /run

volumes:
  crowdsec-db:
  crowdsec-config:

networks:
  crowdsec:
    driver: bridge
